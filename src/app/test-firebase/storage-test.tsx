'use client'

import { useState } from 'react'
import { storage } from '../../config/firebase'
import { ref, getDownloadURL, uploadBytes } from 'firebase/storage'

export default function StorageTest() {
  const [status, setStatus] = useState<string>('')
  const [isLoading, setIsLoading] = useState(false)

  const testStorageConnection = async () => {
    setIsLoading(true)
    setStatus('üîÑ –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Firebase Storage...')

    try {
      // –°—Ç–≤–æ—Ä—é—î–º–æ —Ç–µ—Å—Ç–æ–≤–∏–π —Ñ–∞–π–ª
      const testData = new Blob(['Hello Firebase Storage!'], { type: 'text/plain' })
      const testRef = ref(storage, 'test/connection-test.txt')
      
      // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ —Ñ–∞–π–ª
      await uploadBytes(testRef, testData)
      setStatus('‚úÖ –§–∞–π–ª —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ!')

      // –û—Ç—Ä–∏–º—É—î–º–æ URL –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
      const downloadURL = await getDownloadURL(testRef)
      setStatus(`‚úÖ Storage –ø—Ä–∞—Ü—é—î! URL: ${downloadURL}`)
        } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error'
      console.error('Storage error:', error)
      setStatus(`‚ùå –ü–æ–º–∏–ª–∫–∞ Storage: ${errorMessage}`)
    } finally {
      setIsLoading(false)
    }
  }

  const checkStorageConfig = () => {
    const config = {
      bucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
      projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
    }
    
    setStatus(`üìã –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:
    Project ID: ${config.projectId || '‚ùå MISSING'}
    Storage Bucket: ${config.bucket || '‚ùå MISSING'}`)
  }

  return (
    <div className="bg-white rounded-lg shadow-md p-6 mb-6">
      <h2 className="text-2xl font-bold mb-4">üóÑÔ∏è –¢–µ—Å—Ç Firebase Storage</h2>
      
      <div className="flex gap-3 mb-4">
        <button
          onClick={checkStorageConfig}
          className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
        >
          üìã –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—é
        </button>
        
        <button
          onClick={testStorageConnection}
          disabled={isLoading}
          className="bg-green-500 text-white px-4 py-2 rounded hover:bg-green-600 disabled:bg-gray-400"
        >
          {isLoading ? 'üîÑ –¢–µ—Å—Ç—É—î–º–æ...' : 'üß™ –¢–µ—Å—Ç –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è'}
        </button>
      </div>

      {status && (
        <div className="bg-gray-50 border rounded p-4">
          <pre className="whitespace-pre-wrap text-sm">{status}</pre>
        </div>
      )}

      <div className="mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded">
        <h4 className="font-semibold text-yellow-800 mb-2">–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è:</h4>
        <ul className="text-sm text-yellow-700 space-y-1">
          <li>‚Ä¢ Storage bucket –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ —Ñ–æ—Ä–º–∞—Ç: project-id.appspot.com</li>
          <li>‚Ä¢ –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ Firebase Storage —É–≤—ñ–º–∫–Ω–µ–Ω–∏–π –≤ –∫–æ–Ω—Å–æ–ª—ñ</li>
          <li>‚Ä¢ –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–ø–µ–∫–∏ Storage</li>
        </ul>
      </div>
    </div>
  )
}
