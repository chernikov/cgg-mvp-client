'use client'

import { useState } from 'react'
import { db } from '../../config/firebase'
import { 
  collection, 
  addDoc, 
  getDocs, 
  doc, 
  setDoc, 
  updateDoc, 
  deleteDoc,
  query,
  where
} from 'firebase/firestore'

interface SecurityTestResult {
  operation: string
  allowed: boolean
  error?: string
  description: string
}

export default function SecurityTest() {
  const [testResults, setTestResults] = useState<SecurityTestResult[]>([])
  const [isRunning, setIsRunning] = useState(false)

  const runSecurityTests = async () => {
    setIsRunning(true)
    const results: SecurityTestResult[] = []

    // –¢–µ—Å—Ç 1: –°–ø—Ä–æ–±–∞ —á–∏—Ç–∞–Ω–Ω—è –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
    try {
      await getDocs(collection(db, 'surveys'))
      results.push({
        operation: 'Read surveys collection',
        allowed: true,
        description: '–ß–∏—Ç–∞–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó surveys –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó'
      })    } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error'
      results.push({
        operation: 'Read surveys collection',
        allowed: false,
        error: errorMessage,
        description: '–ß–∏—Ç–∞–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó surveys –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó'
      })
    }

    // –¢–µ—Å—Ç 2: –°–ø—Ä–æ–±–∞ –∑–∞–ø–∏—Å—É –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó
    try {
      await addDoc(collection(db, 'surveys'), {
        test: true,
        timestamp: new Date()
      })
      results.push({
        operation: 'Write to surveys collection',
        allowed: true,
        description: '–ó–∞–ø–∏—Å —É –∫–æ–ª–µ–∫—Ü—ñ—é surveys –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó'
      })    } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error'
      results.push({
        operation: 'Write to surveys collection',
        allowed: false,
        error: errorMessage,
        description: '–ó–∞–ø–∏—Å —É –∫–æ–ª–µ–∫—Ü—ñ—é surveys –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó'
      })
    }

    // –¢–µ—Å—Ç 3: –°–ø—Ä–æ–±–∞ —á–∏—Ç–∞–Ω–Ω—è test –∫–æ–ª–µ–∫—Ü—ñ—ó
    try {
      await getDocs(collection(db, 'test'))
      results.push({
        operation: 'Read test collection',
        allowed: true,
        description: '–ß–∏—Ç–∞–Ω–Ω—è test –∫–æ–ª–µ–∫—Ü—ñ—ó (–º–∞—î –±—É—Ç–∏ –¥–æ–∑–≤–æ–ª–µ–Ω–æ)'
      })
    } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error'
      results.push({
        operation: 'Read test collection',
        allowed: false,
        error: errorMessage,
        description: '–ß–∏—Ç–∞–Ω–Ω—è test –∫–æ–ª–µ–∫—Ü—ñ—ó (–º–∞—î –±—É—Ç–∏ –¥–æ–∑–≤–æ–ª–µ–Ω–æ)'
      })
    }

    // –¢–µ—Å—Ç 4: –°–ø—Ä–æ–±–∞ –∑–∞–ø–∏—Å—É –≤ test –∫–æ–ª–µ–∫—Ü—ñ—é
    try {
      await addDoc(collection(db, 'test'), {
        security_test: true,
        timestamp: new Date()
      })
      results.push({
        operation: 'Write to test collection',
        allowed: true,
        description: '–ó–∞–ø–∏—Å —É test –∫–æ–ª–µ–∫—Ü—ñ—é (–º–∞—î –±—É—Ç–∏ –¥–æ–∑–≤–æ–ª–µ–Ω–æ)'
      })
    } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error'
      results.push({
        operation: 'Write to test collection',
        allowed: false,
        error: errorMessage,
        description: '–ó–∞–ø–∏—Å —É test –∫–æ–ª–µ–∫—Ü—ñ—é (–º–∞—î –±—É—Ç–∏ –¥–æ–∑–≤–æ–ª–µ–Ω–æ)'
      })
    }

    // –¢–µ—Å—Ç 5: –°–ø—Ä–æ–±–∞ —á–∏—Ç–∞–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó users
    try {
      await getDocs(collection(db, 'users'))
      results.push({
        operation: 'Read users collection',
        allowed: true,
        description: '–ß–∏—Ç–∞–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó users'
      })
    } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error'
      results.push({
        operation: 'Read users collection',
        allowed: false,
        error: errorMessage,
        description: '–ß–∏—Ç–∞–Ω–Ω—è –∫–æ–ª–µ–∫—Ü—ñ—ó users'
      })
    }

    // –¢–µ—Å—Ç 6: –°–ø—Ä–æ–±–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    try {
      // –°–ø–æ—á–∞—Ç–∫—É —Å–ø—Ä–æ–±—É—î–º–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç
      const docRef = doc(db, 'test', 'security-test-doc')
      await setDoc(docRef, { test: true })
      
      // –ü–æ—Ç—ñ–º —Å–ø—Ä–æ–±—É—î–º–æ –π–æ–≥–æ –æ–Ω–æ–≤–∏—Ç–∏
      await updateDoc(docRef, { updated: true })
      
      results.push({
        operation: 'Update document',
        allowed: true,
        description: '–û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞'
      })
    } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error'
      results.push({
        operation: 'Update document',
        allowed: false,
        error: errorMessage,
        description: '–û–Ω–æ–≤–ª–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞'
      })
    }

    // –¢–µ—Å—Ç 7: –°–ø—Ä–æ–±–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
    try {
      const docRef = doc(db, 'test', 'security-test-doc')
      await deleteDoc(docRef)
      
      results.push({
        operation: 'Delete document',
        allowed: true,
        description: '–í–∏–¥–∞–ª–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç–∞'
      })
    } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error'
      results.push({
        operation: 'Delete document',
        allowed: false,
        error: errorMessage,
        description: '–í–∏–¥–∞–ª–µ–Ω–Ω—è –¥–æ–∫—É–º–µ–Ω—Ç–∞'
      })
    }

    // –¢–µ—Å—Ç 8: –°–ø—Ä–æ–±–∞ –∑–∞–ø–∏—Ç—É –∑ where —É–º–æ–≤–æ—é
    try {
      const q = query(collection(db, 'test'), where('test', '==', true))
      await getDocs(q)
      
      results.push({
        operation: 'Query with where clause',
        allowed: true,
        description: '–ó–∞–ø–∏—Ç –∑ where —É–º–æ–≤–æ—é'
      })
    } catch (error: unknown) {
      const errorMessage = error instanceof Error ? error.message : 'Unknown error'
      results.push({
        operation: 'Query with where clause',
        allowed: false,
        error: errorMessage,
        description: '–ó–∞–ø–∏—Ç –∑ where —É–º–æ–≤–æ—é'
      })
    }

    setTestResults(results)
    setIsRunning(false)
  }

  const clearResults = () => {
    setTestResults([])
  }

  return (
    <div className="bg-white rounded-lg shadow-md p-6">
      <h2 className="text-2xl font-bold mb-4">üîí –¢–µ—Å—Ç–∏ –±–µ–∑–ø–µ–∫–∏ Firebase</h2>
      
      <div className="mb-6">
        <button
          onClick={runSecurityTests}
          disabled={isRunning}
          className="bg-red-500 text-white px-6 py-2 rounded hover:bg-red-600 disabled:bg-gray-400 mr-4"
        >
          {isRunning ? 'üîÑ –¢–µ—Å—Ç—É—î–º–æ...' : 'üß™ –ó–∞–ø—É—Å—Ç–∏—Ç–∏ —Ç–µ—Å—Ç–∏ –±–µ–∑–ø–µ–∫–∏'}
        </button>
        
        <button
          onClick={clearResults}
          className="bg-gray-500 text-white px-4 py-2 rounded hover:bg-gray-600"
        >
          üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
        </button>
      </div>

      {testResults.length > 0 && (
        <div className="space-y-3">
          <h3 className="text-lg font-semibold">–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ —Ç–µ—Å—Ç—ñ–≤:</h3>
          {testResults.map((result, index) => (
            <div
              key={index}
              className={`p-4 rounded border-l-4 ${
                result.allowed
                  ? 'bg-green-50 border-green-400'
                  : 'bg-red-50 border-red-400'
              }`}
            >
              <div className="flex justify-between items-start">
                <div className="flex-1">
                  <div className="flex items-center mb-1">
                    <span className="text-lg mr-2">
                      {result.allowed ? '‚úÖ' : '‚ùå'}
                    </span>
                    <span className="font-medium">
                      {result.operation}
                    </span>
                  </div>
                  <p className="text-sm text-gray-600 mb-2">
                    {result.description}
                  </p>
                  {result.error && (
                    <div className="text-sm text-red-600 bg-red-100 p-2 rounded">
                      <strong>–ü–æ–º–∏–ª–∫–∞:</strong> {result.error}
                    </div>
                  )}
                </div>
                <span className={`px-2 py-1 rounded text-xs font-medium ${
                  result.allowed
                    ? 'bg-green-100 text-green-800'
                    : 'bg-red-100 text-red-800'
                }`}>
                  {result.allowed ? '–î–û–ó–í–û–õ–ï–ù–û' : '–ó–ê–ë–û–†–û–ù–ï–ù–û'}
                </span>
              </div>
            </div>
          ))}
        </div>
      )}

      <div className="mt-6 p-4 bg-blue-50 border border-blue-200 rounded">
        <h4 className="font-semibold text-blue-800 mb-2">–ü—Ä–æ —Ç–µ—Å—Ç–∏ –±–µ–∑–ø–µ–∫–∏:</h4>
        <ul className="text-sm text-blue-700 space-y-1">
          <li>‚Ä¢ –¢–µ—Å—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—é—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–ø–µ–∫–∏ Firestore –±–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ü—ñ—ó</li>
          <li>‚Ä¢ –ß–µ—Ä–≤–æ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ (‚ùå) –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –∑–∞–±–æ—Ä–æ–Ω–µ–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó</li>
          <li>‚Ä¢ –ó–µ–ª–µ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ (‚úÖ) –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –¥–æ–∑–≤–æ–ª–µ–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó</li>
          <li>‚Ä¢ –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—è, —â–æ —Ç–µ—Å—Ç–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –¥–æ–∑–≤–æ–ª–µ–Ω—ñ, –∞ –ø—Ä–æ–¥–∞–∫—à–Ω –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑–∞—Ö–∏—â–µ–Ω—ñ</li>
        </ul>
      </div>
    </div>
  )
}
