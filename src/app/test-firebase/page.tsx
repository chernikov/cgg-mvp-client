'use client'

import { useEffect, useState } from 'react'
import { db } from '../../config/firebase'
import { collection, getDocs, addDoc } from 'firebase/firestore'

interface TestData {
  id: string
  message?: string
  timestamp?: string
  user?: string
  [key: string]: unknown
}

export default function TestFirebase() {
  const [status, setStatus] = useState('–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...')
  const [data, setData] = useState<TestData[]>([])
  const [error, setError] = useState<string | null>(null)
  const [allCollections, setAllCollections] = useState<string[]>([])

  useEffect(() => {
    testFirebaseConnection()
  }, [])

  const testFirebaseConnection = async () => {
    try {
      setStatus('üîÑ –¢–µ—Å—Ç—É—î–º–æ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Firebase...')
      
      // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –∑ –∫–æ–ª–µ–∫—Ü—ñ—ó
      const testCollection = collection(db, 'test')
      const snapshot = await getDocs(testCollection)
      
      setStatus('‚úÖ Firebase –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –ø—Ä–∞—Ü—é—î!')
      
      const docs = snapshot.docs.map(doc => ({
        id: doc.id,
        ...doc.data()
      }))
      
      setData(docs)
        } catch (err: unknown) {
      const errorMessage = err instanceof Error ? err.message : 'Unknown error'
      setError(errorMessage)
      setStatus('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ Firebase')
      console.error('Firebase Error:', err)
    }
  }

  const addTestData = async () => {
    try {
      const testData = {
        message: 'Test message',
        timestamp: new Date().toISOString(),
        user: 'test-user'
      }
      
      await addDoc(collection(db, 'test'), testData)
      setStatus('‚úÖ –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –¥–æ–¥–∞–Ω–æ!')
      
      // –û–Ω–æ–≤–∏—Ç–∏ —Å–ø–∏—Å–æ–∫
      testFirebaseConnection()
        } catch (err: unknown) {
      const errorMessage = err instanceof Error ? err.message : 'Unknown error'
      setError(errorMessage)
      console.error('Add Data Error:', err)
    }
  }

  const checkAllCollections = async () => {
    try {
      setStatus('üîç –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—Å—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó...')
      
      // –°–ø–∏—Å–æ–∫ –º–æ–∂–ª–∏–≤–∏—Ö –∫–æ–ª–µ–∫—Ü—ñ–π –∑ –≤–∞—à–æ–≥–æ –∫–æ–¥—É
      const possibleCollections = [
        'surveys',
        'survey_responses', 
        'test',
        'users',
        'magical_quest_responses',
        'student_responses',
        'parent_responses',
        'teacher_responses'
      ]
      
      const foundCollections: string[] = []
      
      for (const collectionName of possibleCollections) {
        try {
          const collectionRef = collection(db, collectionName)
          const snapshot = await getDocs(collectionRef)
          if (!snapshot.empty) {
            foundCollections.push(`${collectionName} (${snapshot.size} –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤)`)
          }
        } catch (err) {
          console.log(`–ö–æ–ª–µ–∫—Ü—ñ—è ${collectionName} –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞`)
        }
      }
      
      setAllCollections(foundCollections)
      setStatus(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ ${foundCollections.length} –∫–æ–ª–µ–∫—Ü—ñ–π`)
    } catch (err: unknown) {
      const errorMessage = err instanceof Error ? err.message : 'Unknown error'
      setError(errorMessage)
      setStatus('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –∫–æ–ª–µ–∫—Ü—ñ–π')
    }
  }

  return (
    <div className="min-h-screen bg-gray-100 p-8">
      <div className="max-w-4xl mx-auto">
        <h1 className="text-3xl font-bold mb-6">üî• Firebase Test Page</h1>
        
        <div className="bg-white rounded-lg shadow-md p-6 mb-6">
          <h2 className="text-xl font-semibold mb-4">–°—Ç–∞—Ç—É—Å –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è:</h2>
          <p className="text-lg">{status}</p>
          
          {error && (
            <div className="mt-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded">
              <strong>–ü–æ–º–∏–ª–∫–∞:</strong> {error}
            </div>
          )}
        </div>

        <div className="bg-white rounded-lg shadow-md p-6 mb-6">
          <h2 className="text-xl font-semibold mb-4">–î—ñ—ó:</h2>
          <button 
            onClick={testFirebaseConnection}
            className="bg-blue-500 text-white px-4 py-2 rounded mr-4 hover:bg-blue-600"
          >
            üîÑ –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
          </button>
          <button 
            onClick={addTestData}
            className="bg-green-500 text-white px-4 py-2 rounded mr-4 hover:bg-green-600"
          >
            ‚ûï –î–æ–¥–∞—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ
          </button>
          <button 
            onClick={checkAllCollections}
            className="bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600"
          >
            üîç –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ –∫–æ–ª–µ–∫—Ü—ñ—ó
          </button>
        </div>

        <div className="bg-white rounded-lg shadow-md p-6 mb-6">
          <h2 className="text-xl font-semibold mb-4">–î–∞–Ω—ñ –∑ Firestore:</h2>
          {data.length > 0 ? (
            <div className="space-y-2">
              {data.map((item, index) => (
                <div key={index} className="p-3 bg-gray-50 rounded border">
                  <pre className="text-sm">{JSON.stringify(item, null, 2)}</pre>
                </div>
              ))}
            </div>
          ) : (
            <p className="text-gray-500">–ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –∞–±–æ —â–µ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—î—Ç—å—Å—è...</p>
          )}
        </div>

        <div className="bg-white rounded-lg shadow-md p-6 mb-6">
          <h2 className="text-xl font-semibold mb-4">–í—Å—ñ –∫–æ–ª–µ–∫—Ü—ñ—ó –≤ Firestore:</h2>
          {allCollections.length > 0 ? (
            <div className="space-y-2">
              {allCollections.map((collection, index) => (
                <div key={index} className="p-3 bg-gray-50 rounded border">
                  {collection}
                </div>
              ))}
            </div>
          ) : (
            <p className="text-gray-500">–ù–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –∫–æ–ª–µ–∫—Ü—ñ–π –∞–±–æ —â–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—î—Ç—å—Å—è...</p>
          )}
        </div>        <div className="mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded">
          <h3 className="font-semibold text-yellow-800">Firebase Console –ø–æ—Å–∏–ª–∞–Ω–Ω—è:</h3>
          <a 
            href="https://console.firebase.google.com/project/cgg-mvp-01/firestore" 
            target="_blank" 
            rel="noopener noreferrer"
            className="text-blue-600 underline"
          >
            üîó –í—ñ–¥–∫—Ä–∏—Ç–∏ Firestore Database
          </a>
        </div>
      </div>
    </div>
  )
}
