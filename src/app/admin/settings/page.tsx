"use client";

import { useState } from 'react';

export default function AdminSettingsPage() {
  const [settings, setSettings] = useState({
    aiModel: 'gpt-4-turbo-preview',
    maxTokens: 2000,
    temperature: 0.7,
    language: 'uk',
    maxResponseTime: 30000,
    enableLogging: true,
    enableCache: false,
    cacheExpiryHours: 24
  });

  const [saving, setSaving] = useState(false);
  const [message, setMessage] = useState('');

  const handleSave = async () => {
    setSaving(true);
    setMessage('');

    try {
      // –¢—É—Ç –±–∏ –±—É–≤ –∫–æ–¥ –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
      await new Promise(resolve => setTimeout(resolve, 1000)); // –°–∏–º—É–ª—è—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
      
      console.log('Settings saved:', settings);
      setMessage('‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!');
      
      setTimeout(() => setMessage(''), 3000);
    } catch (error) {
      console.error('Settings save error:', error);
      setMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å');
    } finally {
      setSaving(false);
    }
  };

  const resetToDefaults = () => {
    setSettings({
      aiModel: 'gpt-4-turbo-preview',
      maxTokens: 2000,
      temperature: 0.7,
      language: 'uk',
      maxResponseTime: 30000,
      enableLogging: true,
      enableCache: false,
      cacheExpiryHours: 24
    });
    setMessage('‚ö†Ô∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∫–∏–Ω—É—Ç–æ –¥–æ –∑–Ω–∞—á–µ–Ω—å –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º');
  };

  return (
    <div className="max-w-4xl mx-auto">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏</h1>
        <p className="text-lg text-gray-600">–ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è AI —Å–µ—Ä–≤—ñ—Å—É —Ç–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤</p>
      </div>

      {message && (
        <div className={`mb-6 p-4 rounded-lg ${
          message.includes('‚úÖ') ? 'bg-green-100 text-green-700' : 
          message.includes('‚ùå') ? 'bg-red-100 text-red-700' : 
          'bg-yellow-100 text-yellow-700'
        }`}>
          {message}
        </div>
      )}

      <div className="space-y-8">
        {/* AI –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è */}
        <div className="bg-white rounded-xl shadow-lg p-6">
          <h2 className="text-xl font-semibold mb-6 flex items-center">
            <span className="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center mr-3">ü§ñ</span>
            –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è AI
          </h2>
          
          <div className="grid gap-6 md:grid-cols-2">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ú–æ–¥–µ–ª—å AI
              </label>
              <select
                value={settings.aiModel}
                onChange={(e) => setSettings({...settings, aiModel: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="gpt-4-turbo-preview">GPT-4 Turbo Preview</option>
                <option value="gpt-4">GPT-4</option>
                <option value="gpt-3.5-turbo">GPT-3.5 Turbo</option>
              </select>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–æ–∫–µ–Ω—ñ–≤
              </label>
              <input
                type="number"
                value={settings.maxTokens}
                onChange={(e) => setSettings({...settings, maxTokens: parseInt(e.target.value)})}
                min="100"
                max="4000"
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Temperature (–∫—Ä–µ–∞—Ç–∏–≤–Ω—ñ—Å—Ç—å)
              </label>
              <input
                type="range"
                value={settings.temperature}
                onChange={(e) => setSettings({...settings, temperature: parseFloat(e.target.value)})}
                min="0"
                max="1"
                step="0.1"
                className="w-full"
              />
              <div className="text-sm text-gray-500 mt-1">
                –ü–æ—Ç–æ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è: {settings.temperature}
              </div>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —á–∞—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ (–º—Å)
              </label>
              <input
                type="number"
                value={settings.maxResponseTime}
                onChange={(e) => setSettings({...settings, maxResponseTime: parseInt(e.target.value)})}
                min="5000"
                max="60000"
                step="1000"
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>
          </div>
        </div>

        {/* –°–∏—Å—Ç–µ–º–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è */}
        <div className="bg-white rounded-xl shadow-lg p-6">
          <h2 className="text-xl font-semibold mb-6 flex items-center">
            <span className="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center mr-3">üîß</span>
            –°–∏—Å—Ç–µ–º–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
          </h2>
          
          <div className="grid gap-6 md:grid-cols-2">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ú–æ–≤–∞ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
              </label>
              <select
                value={settings.language}
                onChange={(e) => setSettings({...settings, language: e.target.value})}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="uk">–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞</option>
                <option value="en">English</option>
                <option value="hi">‡§π‡§ø‡§Ç‡§¶‡•Ä</option>
              </select>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ß–∞—Å –∫–µ—à—É (–≥–æ–¥–∏–Ω–∏)
              </label>
              <input
                type="number"
                value={settings.cacheExpiryHours}
                onChange={(e) => setSettings({...settings, cacheExpiryHours: parseInt(e.target.value)})}
                min="1"
                max="168"
                disabled={!settings.enableCache}
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100"
              />
            </div>
          </div>

          <div className="mt-6 space-y-4">
            <div className="flex items-center">
              <input
                type="checkbox"
                id="enableLogging"
                checked={settings.enableLogging}
                onChange={(e) => setSettings({...settings, enableLogging: e.target.checked})}
                className="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"
              />
              <label htmlFor="enableLogging" className="ml-2 text-sm font-medium text-gray-700">
                –£–≤—ñ–º–∫–Ω—É—Ç–∏ –ª–æ–≥—É–≤–∞–Ω–Ω—è AI –∑–∞–ø–∏—Ç—ñ–≤
              </label>
            </div>

            <div className="flex items-center">
              <input
                type="checkbox"
                id="enableCache"
                checked={settings.enableCache}
                onChange={(e) => setSettings({...settings, enableCache: e.target.checked})}
                className="w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500"
              />
              <label htmlFor="enableCache" className="ml-2 text-sm font-medium text-gray-700">
                –£–≤—ñ–º–∫–Ω—É—Ç–∏ –∫–µ—à—É–≤–∞–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π
              </label>
            </div>
          </div>
        </div>

        {/* –î—ñ—ó */}
        <div className="bg-white rounded-xl shadow-lg p-6">
          <h2 className="text-xl font-semibold mb-6 flex items-center">
            <span className="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center mr-3">üíæ</span>
            –î—ñ—ó
          </h2>
          
          <div className="flex flex-wrap gap-4">
            <button
              onClick={handleSave}
              disabled={saving}
              className="bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed font-medium"
            >
              {saving ? 'üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è...' : 'üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è'}
            </button>

            <button
              onClick={resetToDefaults}
              className="bg-gray-500 text-white px-6 py-3 rounded-lg hover:bg-gray-600 font-medium"
            >
              üîÑ –°–∫–∏–Ω—É—Ç–∏ –¥–æ –∑–Ω–∞—á–µ–Ω—å –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
            </button>

            <button
              onClick={() => {
                console.log('Current settings:', settings);
                alert('–ü–æ—Ç–æ—á–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–∏–≤–µ–¥–µ–Ω—ñ –≤ –∫–æ–Ω—Å–æ–ª—å');
              }}
              className="bg-green-500 text-white px-6 py-3 rounded-lg hover:bg-green-600 font-medium"
            >
              üîç –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—ñ
            </button>
          </div>
        </div>

        {/* –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —Å—Ç–∞–Ω */}
        <div className="bg-blue-50 rounded-xl p-6">
          <h3 className="text-lg font-semibold text-blue-900 mb-4">‚ÑπÔ∏è –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h3>
          <div className="grid gap-4 md:grid-cols-2 text-sm">
            <div>
              <span className="text-blue-700 font-medium">API –∫–ª—é—á OpenAI:</span>
              <span className="ml-2 text-blue-600">
                {process.env.NEXT_PUBLIC_OPENAI_API_KEY ? '‚úÖ –ù–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ' : '‚ùå –ù–µ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ'}
              </span>
            </div>
            <div>
              <span className="text-blue-700 font-medium">Firebase:</span>
              <span className="ml-2 text-blue-600">
                {process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID ? '‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ' : '‚ùå –ù–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–æ'}
              </span>
            </div>
            <div>
              <span className="text-blue-700 font-medium">–ü–æ—Ç–æ—á–Ω–∞ –º–æ–¥–µ–ª—å:</span>
              <span className="ml-2 text-blue-600">{settings.aiModel}</span>
            </div>
            <div>
              <span className="text-blue-700 font-medium">–õ–æ–≥—É–≤–∞–Ω–Ω—è:</span>
              <span className="ml-2 text-blue-600">
                {settings.enableLogging ? '‚úÖ –£–≤—ñ–º–∫–Ω–µ–Ω–æ' : '‚ùå –í–∏–º–∫–Ω–µ–Ω–æ'}
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
